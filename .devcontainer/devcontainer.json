// .devcontainer/devcontainer.json
{
  "name": "Geaux Academy Dev Container", // Name your dev container
  "image": "mcr.microsoft.com/devcontainers/node:18", 
  // ^ Uses the official Node.js 18 dev container image from Microsoft

  // Optional: If you prefer building your own Dockerfile, remove "image" 
  // and use this snippet instead (uncomment + adjust file name if needed):
  // "build": {
  //   "dockerfile": "Dockerfile"
  // },

  // Set any features or additional tooling you need
  "features": {
    // Example: Installs the Azure CLI
    // "ghcr.io/devcontainers/features/azure-cli:1": {}
  },

  // Forward common ports (3000 for React, 8080 for a Node backend, etc.)
  "forwardPorts": [3000, 8080],

  // Use Docker-in-Docker if you need to run Docker commands within the container.
  // "init": true,

  // Set any container-level environment variables you need
  "containerEnv": {
    // Example: If you have an .env for your Node app:
    // "NODE_ENV": "development"
  },

  // VS Code settings specific to this container
  "settings": {
    "terminal.integrated.defaultProfile.linux": "/bin/bash"
  },

  // Post-create script: Runs right after the container is built.
  // For example, install dependencies, run lint, etc.
  "postCreateCommand": "npm install",

  // Add the VS Code extensions you want available in this container
  "extensions": [
    "dbaeumer.vscode-eslint",
    "esbenp.prettier-vscode",
    "ms-azuretools.vscode-docker"
    // "ms-vscode.vscode-typescript-next" // Example extension for TypeScript
  ],

  // Uncomment the runArgs if you need special privileges or a custom user
  // "runArgs": ["--user", "node"],

  // Comment out or remove "remoteUser" to use the default user from the image
  "remoteUser": "node"
}
